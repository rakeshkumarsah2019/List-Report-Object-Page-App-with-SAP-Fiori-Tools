export interface MtaDescriptor {
    "_schema-version": string;
    ID: string;
    description?: string;
    version: string;
    provider?: string;
    copyright?: string;
    modules?: Module[];
    "module-types"?: ModuleType[];
    resources?: Resource[];
    "resource-types"?: ResourceType[];
    parameters?: Parameters;
    "parameters-metadata"?: ParametersMetadata;
    "build-parameters"?: ProjectBuildParameters;
    includes?: Includes[];
}
export interface Module {
    name: string;
    type: string;
    description?: string;
    path?: string;
    properties?: Properties;
    "properties-metadata"?: PropertiesMetadata;
    includes?: Includes[];
    requires?: Requires[];
    provides?: Provides[];
    parameters?: Parameters;
    "parameters-metadata"?: ParametersMetadata;
    "build-parameters"?: {
        [index: string]: any;
    };
    "deployed-after"?: string[];
}
export interface ModuleType {
    name: string;
    extends: string;
    properties?: Properties;
    "properties-metadata"?: PropertiesMetadata;
    parameters?: Parameters;
    "parameters-metadata"?: ParametersMetadata;
}
export interface Resource {
    name: string;
    type?: string;
    description?: string;
    properties?: Properties;
    "properties-metadata"?: PropertiesMetadata;
    parameters?: Parameters;
    "parameters-metadata"?: ParametersMetadata;
    includes?: Includes[];
    optional?: boolean;
    active?: boolean;
    requires?: ResourceRequires[];
}
export interface ResourceType {
    name: string;
    extends: string;
    properties?: Properties;
    "properties-metadata"?: PropertiesMetadata;
    parameters?: Parameters;
    "parameters-metadata"?: ParametersMetadata;
}
export interface Parameters {
    [index: string]: any;
}
export interface ParametersMetadata {
    overwritable?: boolean;
    optional?: boolean;
}
export interface ProjectBuildParameters {
    "before-all"?: BuildParameters[];
    "after-all"?: BuildParameters[];
}
export interface BuildParameters {
    builder?: string;
    timeout?: string;
    commands?: string[];
}
export interface Includes {
    name: string;
    path: string;
}
export interface Properties {
    [index: string]: any;
}
export interface PropertiesMetadata {
    overwritable?: boolean;
    optional?: boolean;
    datatype?: "str" | "int" | "float" | "bool";
}
export interface Provides {
    name: string;
    public?: boolean;
    properties?: Properties;
    "properties-metadata"?: PropertiesMetadata;
    parameters?: Parameters;
    "parameters-metadata"?: ParametersMetadata;
}
export interface Requires {
    name: string;
    group?: string;
    list?: string;
    properties?: Properties;
    "properties-metadata"?: PropertiesMetadata;
    parameters?: Parameters;
    "parameters-metadata"?: ParametersMetadata;
    includes?: Includes[];
}
export interface ResourceRequires {
    name: string;
    properties?: Properties;
    "properties-metadata"?: PropertiesMetadata;
    parameters?: Parameters;
    "parameters-metadata"?: ParametersMetadata;
    includes?: Includes[];
}
