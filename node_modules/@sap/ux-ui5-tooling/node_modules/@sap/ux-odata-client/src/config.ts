/**
 * Service names used in secure storage
 */
export enum ServiceName {
    SystemInfo = 'fiori/system/info',
    RefreshToken = 'fiori/system/refreshToken'
}

/**
 * Configuration of a target system.
 */
export interface SystemConfig {
    url?: string;
    originalUrl?: string;
    client?: string;
    service?: string;
    scp?: boolean;
    destination?: string;
}

/**
 * Required configuration to deploy an application using the UI5 Repository service.
 */
export interface ApplicationConfig {
    name: string;
    description?: string;
    package?: string;
    transport?: string;
}
/**
 * Generic type for key/value pairs required for authentication
 */
export interface Credentials {
    [key: string]: unknown;
    username?: string;
    password?: string;

    /**
     * Steampunk service keys contents
     * https://docs.cloudfoundry.org/devguide/services/service-keys.html
     *
     * If using Steampunk either provide this or [Credentials.serviceKeys](#Credentials.serviceKeys)
     */
    serviceKeysContents?: string | ServiceInfo;

    /**
     * Path to file containing the service keys
     * https://docs.cloudfoundry.org/devguide/services/service-keys.html
     *
     * If using Steampunk either provide this or [Credentials.serviceKeysContents](#Credentials.serviceKeysContents)
     */
    serviceKeys?: string;
}

export interface Destination {
    Authentication: string;
    Description: string;
    Host: string;
    Name: string;
    ProxyType: string;
    TrustAll: boolean;
    Type: string;
    WebIDEEnabled?: boolean;
    WebIDESystem?: string;
    WebIDEUsage: string;
}

export interface Destinations {
    [name: string]: Destination;
}

export interface ServiceInfo {
    uaa: {
        clientid: string;
        clientsecret: string;
        url: string;
    };
    url: string;
    catalogs: {
        abap: {
            path: string;
            type: string;
        };
    };
}
