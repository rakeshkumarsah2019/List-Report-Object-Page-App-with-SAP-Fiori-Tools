import { prettyPrintMessage, prettyPrintError, ErrorMessage, SuccessMessage, MessageDetail } from '../../../src/client';
import { Logger } from '../../../src';

class LoggerExpect implements Logger {
    private readonly errorExpected: boolean;

    public constructor(expectError: boolean) {
        this.errorExpected = expectError;
    }

    debug(): void {
        expect(this.errorExpected).toBe(false);
    }

    info(): void {
        expect(this.errorExpected).toBe(false);
    }

    warn(): void {
        expect(this.errorExpected).toBe(false);
    }

    error(): void {
        expect(this.errorExpected).toBe(true);
    }
}

test('Test success message logging', () => {
    const logger = new LoggerExpect(false);
    const message: SuccessMessage = {
        code: 'Info',
        message: 'Info message',
        details: [{ code: '', message: 'message', severity: 'INFO' } as MessageDetail]
    };
    prettyPrintMessage(message, logger);
});

test('Test error message logging', () => {
    const logger = new LoggerExpect(true);
    const error: ErrorMessage = {
        code: 'Error',
        message: {
            value: 'Error message'
        },
        innererror: {
            transactionid: '',
            timestamp: '',
            // eslint-disable-next-line @typescript-eslint/camelcase
            Error_Resolution: {},
            errordetails: [{ code: '', message: 'message', severity: 'ERROR' } as MessageDetail]
        }
    };
    prettyPrintError(error, logger);
});
