import { ODataClient, ODataClientOptions } from './oDataClient';
/**
 * OData versions supported by the catalog service
 */
export declare enum ODataVersion {
    v2 = "2",
    v4 = "4"
}
/**
 * Structure representing annotations (including their definitions)
 */
export interface Annotations {
    TechnicalName: string;
    Version: string;
    Definitions: string;
    Uri: string;
}
/**
 * Structure representing a service
 */
export interface Service {
    ID: string;
    Description: string;
    Title: string;
    MetadataUrl: string;
    ServiceUrl: string;
    TechnicalName: string;
    Version: string;
}
export interface CatalogOptions extends ODataClientOptions {
    odataVersion?: ODataVersion;
}
/**
 * Filter options to search for annotations
 */
export interface FilterOptions {
    id?: string;
    title?: string;
    path?: string;
}
/**
 * Extension of the generic OData client simplifying the consumption of the SAP OData Catalog service
 */
export declare class Catalog extends ODataClient {
    constructor({ odataVersion, system, credentials, log, connection }: CatalogOptions);
    /**
     * List all available Services
     */
    listServices(): Promise<Service[]>;
    /**
     * Find a specific service by title
     * @param title service title
     */
    protected findService({ title, path }: FilterOptions): Promise<Service>;
    /**
     * Get all annotations available for the service matching one of the below filter options
     * @param id service id
     * @param title sevice title
     * @param path service path
     */
    getAnnotations({ id, title, path }: FilterOptions): Promise<Annotations[]>;
    private getServiceAnnotations;
}
