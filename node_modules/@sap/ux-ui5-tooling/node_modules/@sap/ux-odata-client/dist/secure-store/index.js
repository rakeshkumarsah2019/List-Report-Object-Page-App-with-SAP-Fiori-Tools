"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const connection_1 = require("../connection");
const dummyStore_1 = require("./dummyStore");
const keytarStore_1 = require("./keytarStore");
function getKeytar(log) {
    var _a, _b, _c, _d;
    try {
        // eslint-disable-next-line @typescript-eslint/no-var-requires
        return require('keytar');
    }
    catch (e) {
        log.warn(e);
        log.warn(`Could not "require('keytar')". Trying VSCode's copy`);
        let vscode;
        try {
            vscode = require('vscode');
        }
        catch (e) {
            log.warn(e);
            log.warn('Could not get hold of vscode');
            return null;
        }
        try {
            return require(`${(_b = (_a = vscode) === null || _a === void 0 ? void 0 : _a.env) === null || _b === void 0 ? void 0 : _b.appRoot}/node_modules.asar/keytar`);
        }
        catch (e) {
            log.warn(e);
            log.warn('Could not get keytar from vscode node_modules.asar');
        }
        try {
            return require(`${(_d = (_c = vscode) === null || _c === void 0 ? void 0 : _c.env) === null || _d === void 0 ? void 0 : _d.appRoot}/node_modules/keytar`);
        }
        catch (e) {
            log.warn(e);
            log.warn('Could not get keytar from vscode node_modules');
        }
        return null;
    }
}
/**
 * Create an instance of a store
 */
exports.getSecureStore = (log) => {
    if (connection_1.isAppStudio()) {
        return new dummyStore_1.DummyStore(log);
    }
    else {
        const keytar = getKeytar(log);
        return keytar ? new keytarStore_1.KeytarStore(log, keytar) : new dummyStore_1.DummyStore(log);
    }
};
//# sourceMappingURL=index.js.map