"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const child_process_1 = require("child_process");
const utils_1 = require("../utils");
/**
 * CLI params short options
 */
const paramMap = {
    '-c': 'config',
    '-o': 'open',
    '-p': 'port'
};
const convertMap = {
    https: 'h2',
    ui5: 'FIORI_TOOLS_UI5_VERSION',
    ui5Uri: 'FIORI_TOOLS_UI5_URI',
    proxy: 'FIORI_TOOLS_PROXY'
};
async function run(args) {
    return new Promise((resolve, reject) => {
        (async () => {
            try {
                const ui5Args = ['serve'];
                const params = utils_1.parseArgs(args, paramMap);
                params.port = params.port ? await utils_1.getAvailablePort(params.port) : await utils_1.getAvailablePort();
                Object.entries(params).forEach(([key, value]) => {
                    var _a, _b;
                    if ((_a = convertMap[key]) === null || _a === void 0 ? void 0 : _a.startsWith('FIORI_TOOLS_')) {
                        process.env = Object.assign(process.env, { [convertMap[key]]: value });
                    }
                    else {
                        const arg = (_b = convertMap[key], (_b !== null && _b !== void 0 ? _b : key));
                        ui5Args.push('--' + arg);
                        ui5Args.push(value);
                    }
                });
                const spawnedCmd = child_process_1.spawn('ui5', ui5Args, {});
                spawnedCmd.stdout.on('data', (data) => {
                    console.log(data.toString());
                });
                spawnedCmd.stderr.on('data', (data) => {
                    console.log(data.toString().trim());
                });
                spawnedCmd.on('close', () => {
                    resolve();
                });
            }
            catch (error) {
                reject(error);
            }
        })();
    });
}
exports.run = run;
//# sourceMappingURL=run.js.map