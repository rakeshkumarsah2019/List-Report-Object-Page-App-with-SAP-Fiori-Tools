import { ExportResults, AnalyticalListPageConfig, ListReportConfig, ObjectPageConfig, OverviewPageConfig } from '../../../v2';
import { ApplicationV2 } from '../application';
/**
 * Run through the given ListReport config and return respective manifest entry and flex changes
 * @param appId - id of the Fiori elements app, which is usually namespace.appid
 * @param listReportConfig - content of the src/ListReport_<entity_set>.json file
 * @param entitySet - name of the entity set
 * @param manifest - app descriptor (manifest.json)
 * @param jsonSchema - application specific schema
 * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.
 */
export declare const exportListReportPage: (appId: string, listReportConfig: ListReportConfig, entitySet: string, manifest: object, jsonSchema: object) => ExportResults;
/**
 * Run through the given AnalyticalListPage config and return respective manifest entry and flex changes
 * @param appId - id of the Fiori elements app, which is usually namespace.appid
 * @param analyticalListPageConfig - content of the src/AnalyticalListPage_<entity_set>.json file
 * @param entitySet - name of the entity set
 * @param manifest - app descriptor (manifest.json)
 * @param jsonSchema - application specific schema
 * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.
 */
export declare const exportAnalyticalListPage: (appId: string, analyticalListPageConfig: AnalyticalListPageConfig, entitySet: string, manifest: object, jsonSchema: object) => ExportResults;
/**
 * Run through the given ObjectPage config and return respective manifest entry and flex changes
 * @param appId - id of the Fiori elements app, which is usually namespace.appid
 * @param objectPageConfig - content of the src/ObjectPage_<entity_set>.json file
 * @param entitySet - name of the entity set
 * @param manifest - app descriptor (manifest.json)
 * @param jsonSchema - application specific schema
 * @param entityAnnotations - list of annotations of the entity type that the page is referring to
 * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.
 */
export declare const exportObjectPage: (appId: string, objectPageConfig: ObjectPageConfig, entitySet: string, manifest: object, jsonSchema: object) => ExportResults;
/**
 * Run through the given ObjectPage config and return respective manifest entry and flex changes
 * @param overviewPageConfig - content of the src/OverviewPage_<entity_set>.json file
 * @param manifest - app descriptor (manifest.json)
 * @param jsonSchema - application specific schema
 * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.
 */
export declare const exportOverviewPage: (overviewPageConfig: OverviewPageConfig, manifest: object, jsonSchema: object) => ExportResults;
/**
 * Exports a Fiori Element V2 page.
 * It converts the entries of the input page (config file) to corresponding manifest settings and flex changes
 * @param appId - application id
 * @param page - content of the config file of a page
 * @param manifest - app descriptor (manifest.json)
 * @param jsonSchema - application specific schema
 * @param entityAnnotations - list of annotations of the entity type that the page is referring to
 * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.
 */
export declare const exportPageV2: (appId: string, page: import("../../../v2").PageBase, manifest: object, jsonSchema: object) => ExportResults;
/**
 * Exports a Fiori Element V2 application.
 * It converts the entries of the input application (config file) to corresponding manifest settings and flex changes
 * @param application - content of the config file of an application
 * @param manifest - app descriptor (manifest.json)
 * @param jsonSchema - application specific schema
 * @returns ExportResults - The export result comprises the enhanced manifest as well as a list of flex changes.
 */
export declare const exportApplicationV2: (application: ApplicationV2, manifest: object, jsonSchema: object) => ExportResults;
