{
  "type": "object",
  "properties": {
    "showConfirmationOnDraftActivate": {
      "description": "Set showConfirmationOnDraftActivate to true to enable a confirmation before a save if you have pending warnings.",
      "type": "boolean"
    },
    "hideChevronForUnauthorizedExtNav": {
      "description": "If you set this property to true, the navigation chevron is hidden in case the launchpad indicates that the user has no authorization to navigate.",
      "type": "boolean"
    },
    "allowDeepLinking": {
      "description": "allowDeepLinking restricts deep linking to certain object page levels.",
      "type": "boolean"
    },
    "navToListOnSave": {
      "description": "If you set navToListOnSave to true, the application will navigate back to the list on a save.",
      "type": "boolean"
    },
    "header": {
      "$ref": "#/definitions/ObjectPageHeader"
    },
    "layout": {
      "$ref": "#/definitions/ObjectPageLayout"
    },
    "sections": {
      "anyOf": [
        {
          "$ref": "#/definitions/GenericSections"
        },
        {
          "$ref": "#/definitions/CustomSections"
        }
      ]
    },
    "$schema": {
      "type": "string"
    }
  },
  "additionalProperties": false,
  "definitions": {
    "ObjectPageHeader": {
      "type": "object",
      "properties": {
        "showRelatedApps": {
          "description": "Set showRelatedApps to true to show the navigation button for related apps.",
          "type": "boolean"
        },
        "editableHeaderContent": {
          "description": "Set editableHeaderContent to true to make the header fields editable.",
          "type": "boolean"
        },
        "simpleHeaderFacets": {
          "description": "Set simpleHeaderFacets to true to use simpler header facets.",
          "type": "boolean"
        },
        "displayShape": {
          "$ref": "#/definitions/AvatarShape",
          "description": "With displayShape you can define the shape of the avatar."
        }
      },
      "additionalProperties": false
    },
    "AvatarShape": {
      "enum": [
        "Circle",
        "Square"
      ],
      "type": "string"
    },
    "ObjectPageLayout": {
      "type": "object",
      "properties": {
        "showHeaderContent": {
          "description": "showHeaderContent determines the visibility of the Header content.",
          "type": "boolean"
        },
        "showAnchorBar": {
          "description": "showAnchorBar determines whether the navigation bar (anchor bar) is displayed.",
          "type": "boolean"
        },
        "useIconTabBar": {
          "description": "useIconTabBar determines whether the navigation mode is tab-based instead of based on the default anchor bar.",
          "type": "boolean"
        },
        "alwaysShowContentHeader": {
          "description": "alwaysShowContentHeader determines whether header content will always be expanded on desktop.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "GenericSections": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/ObjectPageSectionV2<GenericColumns>"
      }
    },
    "ObjectPageSectionV2<GenericColumns>": {
      "type": "object",
      "properties": {
        "table": {
          "anyOf": [
            {
              "$ref": "#/definitions/ObjectPageResponsiveTable<GenericColumns>"
            },
            {
              "$ref": "#/definitions/ObjectPageAnalyticalTable<GenericColumns>"
            },
            {
              "$ref": "#/definitions/ObjectPageGridTable<GenericColumns>"
            },
            {
              "$ref": "#/definitions/ObjectPageTreeTable<GenericColumns>"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "ObjectPageResponsiveTable<GenericColumns>": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.",
          "type": "string",
          "enum": [
            "ResponsiveTable"
          ]
        },
        "includeItemInSelection": {
          "description": "Set includeItemInSelection to true if you want items to be selectable when clicked, rather than after the selection control has been set.",
          "type": "boolean"
        },
        "popinLayout": {
          "$ref": "#/definitions/PopinLayout",
          "description": "popinLayout defines the layout in which the table pop-in rows shall be rendered."
        },
        "editable": {
          "description": "With editable you can control if a table can be edited. It should be set to false for smart tables with non-editable content.",
          "type": "boolean"
        },
        "multiSelect": {
          "description": "Single selection in tables is enabled by default. If you want, you can enable multi-select.",
          "type": "boolean"
        },
        "selectAll": {
          "description": "The 'Select All' button is disabled by default. To enable it, set selectAll to true.",
          "type": "boolean"
        },
        "selectionLimit": {
          "description": "If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.",
          "type": "number"
        },
        "showDraftToggle": {
          "description": "In the table toolbar, you can enable buttons to display and hide draft values. By default, these buttons are hidden. To enable them, set the showDraftToggle flag to true.",
          "type": "boolean"
        },
        "quickVariantSelection": {
          "$ref": "#/definitions/QuickVariantSelection",
          "description": "With quickVariantSelection you can switch on the multiple view feature. It links to variants you must have been added to your annotations before."
        },
        "useExportToExcel": {
          "description": "useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.",
          "type": "boolean"
        },
        "createMode": {
          "description": "Use createMode 'inline' to enable inline creation of table entries for draft enabled applications.",
          "type": "string",
          "enum": [
            "inline"
          ]
        },
        "disableDefaultInlineCreateSort": {
          "description": "If createMode is set to inline, you can use this setting to disable the default sort order.",
          "type": "boolean"
        },
        "columns": {
          "$ref": "#/definitions/GenericColumns"
        }
      },
      "additionalProperties": false
    },
    "PopinLayout": {
      "enum": [
        "Block",
        "GridLarge",
        "GridSmall"
      ],
      "type": "string"
    },
    "QuickVariantSelection": {
      "type": "object",
      "properties": {
        "showCounts": {
          "description": "To show the number of records available, set showCounts to true.",
          "type": "boolean"
        },
        "variants": {
          "description": "The variants section contains a set of entries that point to SelectionVariants or SelectionPresentationVariants defined in the annotations.",
          "type": "object",
          "properties": {
            "0": {
              "$ref": "#/definitions/QuickVariant"
            },
            "1": {
              "$ref": "#/definitions/QuickVariant"
            },
            "2": {
              "$ref": "#/definitions/QuickVariant"
            },
            "3": {
              "$ref": "#/definitions/QuickVariant"
            },
            "4": {
              "$ref": "#/definitions/QuickVariant"
            },
            "5": {
              "$ref": "#/definitions/QuickVariant"
            },
            "6": {
              "$ref": "#/definitions/QuickVariant"
            },
            "7": {
              "$ref": "#/definitions/QuickVariant"
            },
            "8": {
              "$ref": "#/definitions/QuickVariant"
            },
            "9": {
              "$ref": "#/definitions/QuickVariant"
            }
          },
          "additionalProperties": false,
          "required": [
            "0",
            "1"
          ]
        }
      },
      "additionalProperties": false,
      "required": [
        "variants"
      ]
    },
    "QuickVariant": {
      "type": "object",
      "properties": {
        "key": {
          "description": "A key entry that is used for initializing the corresponding SegmentedButton item. This entry is mandatory.",
          "type": "string"
        },
        "annotationPath": {
          "description": "Use annotationPath to define a specific variant that points to a SelectionVariant or SelectionPresentationVariant annotation.",
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "annotationPath",
        "key"
      ]
    },
    "GenericColumns": {
      "type": "object",
      "additionalProperties": {
        "$ref": "#/definitions/TableColumn"
      }
    },
    "TableColumn": {
      "type": "object",
      "properties": {
        "width": {
          "description": "The width property defines the width of the column.",
          "type": "string"
        },
        "hAlign": {
          "$ref": "#/definitions/HAlign",
          "description": "The hAlign property defines the horizontal alignment of the column content."
        }
      },
      "additionalProperties": false
    },
    "HAlign": {
      "enum": [
        "Begin",
        "Center",
        "End",
        "Initial",
        "Left",
        "Right"
      ],
      "type": "string"
    },
    "ObjectPageAnalyticalTable<GenericColumns>": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.",
          "type": "string",
          "enum": [
            "AnalyticalTable"
          ]
        },
        "condensedTableLayout": {
          "description": "For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.",
          "type": "boolean"
        },
        "editable": {
          "description": "With editable you can control if a table can be edited. It should be set to false for smart tables with non-editable content.",
          "type": "boolean"
        },
        "multiSelect": {
          "description": "Single selection in tables is enabled by default. If you want, you can enable multi-select.",
          "type": "boolean"
        },
        "selectAll": {
          "description": "The 'Select All' button is disabled by default. To enable it, set selectAll to true.",
          "type": "boolean"
        },
        "selectionLimit": {
          "description": "If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.",
          "type": "number"
        },
        "showDraftToggle": {
          "description": "In the table toolbar, you can enable buttons to display and hide draft values. By default, these buttons are hidden. To enable them, set the showDraftToggle flag to true.",
          "type": "boolean"
        },
        "quickVariantSelection": {
          "$ref": "#/definitions/QuickVariantSelection",
          "description": "With quickVariantSelection you can switch on the multiple view feature. It links to variants you must have been added to your annotations before."
        },
        "useExportToExcel": {
          "description": "useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.",
          "type": "boolean"
        },
        "createMode": {
          "description": "Use createMode 'inline' to enable inline creation of table entries for draft enabled applications.",
          "type": "string",
          "enum": [
            "inline"
          ]
        },
        "disableDefaultInlineCreateSort": {
          "description": "If createMode is set to inline, you can use this setting to disable the default sort order.",
          "type": "boolean"
        },
        "columns": {
          "$ref": "#/definitions/GenericColumns"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageGridTable<GenericColumns>": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.",
          "type": "string",
          "enum": [
            "GridTable"
          ]
        },
        "condensedTableLayout": {
          "description": "For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.",
          "type": "boolean"
        },
        "editable": {
          "description": "With editable you can control if a table can be edited. It should be set to false for smart tables with non-editable content.",
          "type": "boolean"
        },
        "multiSelect": {
          "description": "Single selection in tables is enabled by default. If you want, you can enable multi-select.",
          "type": "boolean"
        },
        "selectAll": {
          "description": "The 'Select All' button is disabled by default. To enable it, set selectAll to true.",
          "type": "boolean"
        },
        "selectionLimit": {
          "description": "If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.",
          "type": "number"
        },
        "showDraftToggle": {
          "description": "In the table toolbar, you can enable buttons to display and hide draft values. By default, these buttons are hidden. To enable them, set the showDraftToggle flag to true.",
          "type": "boolean"
        },
        "quickVariantSelection": {
          "$ref": "#/definitions/QuickVariantSelection",
          "description": "With quickVariantSelection you can switch on the multiple view feature. It links to variants you must have been added to your annotations before."
        },
        "useExportToExcel": {
          "description": "useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.",
          "type": "boolean"
        },
        "createMode": {
          "description": "Use createMode 'inline' to enable inline creation of table entries for draft enabled applications.",
          "type": "string",
          "enum": [
            "inline"
          ]
        },
        "disableDefaultInlineCreateSort": {
          "description": "If createMode is set to inline, you can use this setting to disable the default sort order.",
          "type": "boolean"
        },
        "columns": {
          "$ref": "#/definitions/GenericColumns"
        }
      },
      "additionalProperties": false
    },
    "ObjectPageTreeTable<GenericColumns>": {
      "type": "object",
      "properties": {
        "type": {
          "description": "Use type to define the table type. Note: Grid tables, analytical tables, and tree tables cannot be rendered on smartphones. Instead, responsive tables always show on smartphones.",
          "type": "string",
          "enum": [
            "TreeTable"
          ]
        },
        "condensedTableLayout": {
          "description": "For the analytical table, grid table and tree table you can decide on a condensed table layout by setting condensedTableLayout to true.",
          "type": "boolean"
        },
        "editable": {
          "description": "With editable you can control if a table can be edited. It should be set to false for smart tables with non-editable content.",
          "type": "boolean"
        },
        "multiSelect": {
          "description": "Single selection in tables is enabled by default. If you want, you can enable multi-select.",
          "type": "boolean"
        },
        "selectAll": {
          "description": "The 'Select All' button is disabled by default. To enable it, set selectAll to true.",
          "type": "boolean"
        },
        "selectionLimit": {
          "description": "If new data needs to be loaded from the back-end system for this, the number of lines to be loaded is restricted to the specified limit. The default value for this limit is 200. If selectAll is true, the selection limit is not evaluated.",
          "type": "number"
        },
        "showDraftToggle": {
          "description": "In the table toolbar, you can enable buttons to display and hide draft values. By default, these buttons are hidden. To enable them, set the showDraftToggle flag to true.",
          "type": "boolean"
        },
        "quickVariantSelection": {
          "$ref": "#/definitions/QuickVariantSelection",
          "description": "With quickVariantSelection you can switch on the multiple view feature. It links to variants you must have been added to your annotations before."
        },
        "useExportToExcel": {
          "description": "useExportToExcel must be set to true if you want to export data to a spreadsheet application, for example Microsoft Excel.",
          "type": "boolean"
        },
        "createMode": {
          "description": "Use createMode 'inline' to enable inline creation of table entries for draft enabled applications.",
          "type": "string",
          "enum": [
            "inline"
          ]
        },
        "disableDefaultInlineCreateSort": {
          "description": "If createMode is set to inline, you can use this setting to disable the default sort order.",
          "type": "boolean"
        },
        "columns": {
          "$ref": "#/definitions/GenericColumns"
        }
      },
      "additionalProperties": false
    },
    "CustomSections": {
      "type": "object",
      "properties": {
        "custom": {
          "type": "array",
          "items": {
            "anyOf": [
              {
                "$ref": "#/definitions/ObjectPageCustomSectionView"
              },
              {
                "$ref": "#/definitions/ObjectPageCustomSectionFragment"
              }
            ]
          }
        }
      },
      "additionalProperties": false
    },
    "ObjectPageCustomSectionView": {
      "type": "object",
      "properties": {
        "className": {
          "type": "string",
          "enum": [
            "sap.ui.core.mvc.View"
          ]
        },
        "viewName": {
          "type": "string"
        },
        "relatedFacet": {
          "type": "string"
        },
        "relativePosition": {
          "$ref": "#/definitions/SectionPosition"
        },
        "type": {
          "$ref": "#/definitions/ViewTypes"
        },
        "title": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "className",
        "relatedFacet",
        "relativePosition",
        "title",
        "type",
        "viewName"
      ]
    },
    "SectionPosition": {
      "enum": [
        "AfterFacet",
        "BeforeFacet",
        "ReplaceFacet"
      ],
      "type": "string"
    },
    "ViewTypes": {
      "enum": [
        "HTML",
        "JS",
        "JSON",
        "XML"
      ],
      "type": "string"
    },
    "ObjectPageCustomSectionFragment": {
      "type": "object",
      "properties": {
        "className": {
          "type": "string",
          "enum": [
            "sap.ui.core.Fragment"
          ]
        },
        "fragmentName": {
          "type": "string"
        },
        "relatedFacet": {
          "type": "string"
        },
        "relativePosition": {
          "$ref": "#/definitions/SectionPosition"
        },
        "type": {
          "$ref": "#/definitions/ViewTypes"
        },
        "title": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "required": [
        "className",
        "fragmentName",
        "relatedFacet",
        "relativePosition",
        "title",
        "type"
      ]
    }
  },
  "$schema": "http://json-schema.org/draft-07/schema#"
}